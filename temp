import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { KeycloakService } from 'keycloak-angular';
import { Observable, from } from 'rxjs';
import { mergeMap } from 'rxjs/operators';

@Injectable()
export class AuthInterceptor implements HttpInterceptor {
  constructor(private keycloak: KeycloakService) {}

  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
    return from(this.keycloak.getToken()).pipe(
      mergeMap(token => {
        const modifiedReq = req.clone({
          setHeaders: {
            'Authorization': `Bearer ${token}`,  // Attach JWT token
            'Access-Control-Allow-Origin': '*'  // Keep existing headers
          }
        });
        return next.handle(modifiedReq);
      })
    );
  }
}
