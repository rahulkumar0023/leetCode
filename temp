import javax.xml.bind.JAXBContext;
import javax.xml.bind.Unmarshaller;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.events.XMLEvent;
import java.io.StringReader;

public class SoapMessageProcessor {

    public Object processSoapMessage(String soapMessage) {
        try {
            // Step 1: Create an XMLInputFactory (for StAX parsing)
            XMLInputFactory factory = XMLInputFactory.newInstance();
            factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, true);

            // Step 2: Create an XMLEventReader for the SOAP message
            XMLEventReader eventReader = factory.createXMLEventReader(new StringReader(soapMessage));

            // Step 3: Navigate to the SOAP Body element
            QName bodyQName = new QName("http://schemas.xmlsoap.org/soap/envelope/", "Body");
            while (eventReader.hasNext()) {
                XMLEvent event = eventReader.nextEvent();
                if (event.isStartElement() && event.asStartElement().getName().equals(bodyQName)) {
                    break;  // Found <soap:Body>
                }
            }

            // Step 4: Check if it's a byNumberRequest or byNameRequest
            QName byNumberRequestQName = new QName("http://example.com/individual", "byNumberRequest");
            QName byNameRequestQName = new QName("http://example.com/individual", "byNameRequest");

            Object result = null;

            while (eventReader.hasNext()) {
                XMLEvent event = eventReader.nextEvent();
                if (event.isStartElement() && event.asStartElement().getName().equals(byNumberRequestQName)) {
                    System.out.println("Processing byNumberRequest...");
                    JAXBContext jaxbContext = JAXBContext.newInstance(ByNumberRequest.class);
                    Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();
                    result = unmarshaller.unmarshal(eventReader);
                    break;
                } else if (event.isStartElement() && event.asStartElement().getName().equals(byNameRequestQName)) {
                    System.out.println("Processing byNameRequest...");
                    JAXBContext jaxbContext = JAXBContext.newInstance(ByNameRequest.class);
                    Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();
                    result = unmarshaller.unmarshal(eventReader);
                    break;
                }
            }

            return result;

        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Failed to process SOAP message", e);
        }
    }

    public static void main(String[] args) {
        SoapMessageProcessor processor = new SoapMessageProcessor();

        // Example
