import javax.xml.soap.*;
import java.io.StringReader;
import javax.xml.transform.stream.StreamSource;
import org.springframework.oxm.jaxb.Jaxb2Marshaller;

public class SoapMessageProcessor {

    private final Jaxb2Marshaller marshaller;

    public SoapMessageProcessor(Jaxb2Marshaller marshaller) {
        this.marshaller = marshaller;
    }

    public void processSoapMessage(String soapMessage) {
        try {
            // Parse the SOAP message
            MessageFactory messageFactory = MessageFactory.newInstance();
            SOAPMessage message = messageFactory.createMessage(null, new StringReader(soapMessage));

            // Extract the SOAP body
            SOAPBody body = message.getSOAPBody();

            // Extract the content of the body (assuming one child element)
            SOAPElement element = (SOAPElement) body.getChildElements().next();

            // Convert SOAP element to string to unmarshal it
            String elementString = element.toString();  // Modify to convert the element correctly

            // Unmarshal the content
            StringReader reader = new StringReader(elementString);
            StreamSource source = new StreamSource(reader);
            Object request = marshaller.unmarshal(source);

            if (request instanceof ByNumberRequest) {
                ByNumberRequest byNumberRequest = (ByNumberRequest) request;
                System.out.println("Processing ByNumberRequest: " + byNumberRequest);
            } else if (request instanceof ByNameRequest) {
                ByNameRequest byNameRequest = (ByNameRequest) request;
                System.out.println("Processing ByNameRequest: " + byNameRequest);
            }
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Failed to process SOAP message", e);
        }
    }
}
