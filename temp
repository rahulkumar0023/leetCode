public List<InputStream> extractStreamsFromZip(Resource zipResource) {
    List<InputStream> extractedStreams = new ArrayList<>();
    boolean hasEntries = false;

    try (ZipInputStream zis = new ZipInputStream(new BufferedInputStream(zipResource.getInputStream()))) {
        ZipEntry entry;

        // Iterate through the entries in the ZIP file
        while ((entry = zis.getNextEntry()) != null) {
            hasEntries = true; // At least one entry exists
            if (!entry.isDirectory()) {
                // Extract the file
                ByteArrayOutputStream buffer = new ByteArrayOutputStream();
                byte[] temp = new byte[1024];
                int bytesRead;

                while ((bytesRead = zis.read(temp)) != -1) {
                    buffer.write(temp, 0, bytesRead);
                }

                // Add the extracted file as a ByteArrayInputStream
                extractedStreams.add(new ByteArrayInputStream(buffer.toByteArray()));
            }
            zis.closeEntry();
        }

        if (!hasEntries) {
            throw new RuntimeException("Corrupted ZIP file: No entries found.");
        }
    } catch (Exception e) {
        throw new RuntimeException("Failed to extract files from ZIP resource", e);
    }

    return extractedStreams;
}
