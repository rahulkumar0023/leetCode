import java.util.*;

public class CsvMapstructGenerator {
    public static void main(String[] args) {
        // Paste your header names here (could be read from file, shown for clarity)
        String[] headers = {
            "ID", "Note", "InvoiceTypeCode", "DueDate", "ProfileID", "BuyerReference"
            // ... add your full list here
        };

        // 1. Generate @Mapping lines
        System.out.println("// === @Mapping lines ===");
        for (String header : headers) {
            String javaField = toCamel(header);
            String methodName = "to" + header;
            System.out.println("@Mapping(target = \"" + javaField + "\", expression = \"java(" + methodName + "(item.get" + capitalize(javaField) + "()))\")");
        }
        System.out.println();

        // 2. Generate conversion methods
        System.out.println("// === Conversion methods ===");
        for (String header : headers) {
            String type = header + "Type"; // Example: "ID" â†’ "IDType"
            String methodName = "to" + header;
            String javaField = toCamel(header);
            System.out.println("default " + type + " " + methodName + "(String value) {");
            System.out.println("    if (value == null) return null;");
            System.out.println("    " + type + " t = new " + type + "();");
            System.out.println("    t.setValue(value);");
            System.out.println("    return t;");
            System.out.println("}");
            System.out.println();
        }
    }

    private static String toCamel(String name) {
        if (!name.contains("_")) return name.substring(0,1).toLowerCase() + name.substring(1);
        String[] parts = name.split("_");
        StringBuilder sb = new StringBuilder(parts[0].toLowerCase());
        for (int i = 1; i < parts.length; i++) {
            sb.append(parts[i].substring(0,1).toUpperCase());
            sb.append(parts[i].substring(1));
        }
        return sb.toString();
    }

    private static String capitalize(String name) {
        return name.substring(0,1).toUpperCase() + name.substring(1);
    }
}
