Perfect ‚Äî the screenshots are super clear üëè

Both failures are easy to fix ‚Äî let‚Äôs go one by one.

---

## ‚ùå **1. `shouldGetBucketContent()`**

### **Error:**

```
Wanted but not invoked:
s3Client.getObject("test-bucket", "data.csv");
However, there was exactly 1 interaction with this mock:
s3Client.listObjects(...)
```

### **Root Cause:**

Your mock setup for `s3Client.getObject()` didn‚Äôt match the real arguments that your service actually uses.

In your service class (`CosStorageService.getBucketContent()`), the code most likely calls:

```java
s3Client.getObject(bucketName, objectSummary.getKey());
```

üëâ You mocked:

```java
when(s3Client.getObject(bucketName, "data.csv")).thenReturn(s3Object);
```

but you also constructed your mock `S3ObjectSummary` like this:

```java
S3ObjectSummary summary = new S3ObjectSummary();
summary.setKey("data.csv");
```

That looks correct ‚Äî but the mismatch can happen if:

* Your real code prefixes the bucket name (e.g., `"test-bucket/data.csv"`) or
* The service normalizes path differently (`"/data.csv"` or `"bucket/data.csv"`).

---

### ‚úÖ **Fix: use `ArgumentMatchers.anyString()`**

Change your mock to be less strict:

```java
when(s3Client.getObject(eq(bucketName), anyString())).thenReturn(s3Object);
```

‚úÖ This guarantees the mock will catch the real method call.

Then you can still verify afterward:

```java
verify(s3Client).getObject(eq(bucketName), contains("data.csv"));
```

---

### ‚úÖ **Updated Test**

```java
@Test
void shouldGetBucketContent() {
    ObjectListing listing = mock(ObjectListing.class);
    S3ObjectSummary summary = new S3ObjectSummary();
    summary.setKey("data.csv");
    summary.setSize(100);
    when(listing.getObjectSummaries()).thenReturn(List.of(summary));

    when(s3Client.listObjects(any(ListObjectsRequest.class))).thenReturn(listing);

    S3Object s3Object = new S3Object();
    s3Object.setObjectContent(new ByteArrayInputStream("content".getBytes()));
    when(s3Client.getObject(eq(bucketName), anyString())).thenReturn(s3Object);

    List<S3Object> result = cosStorageService.getBucketContent();

    assertThat(result).hasSize(1);
    assertThat(result.get(0).getObjectContent()).isNotNull();
    verify(s3Client).getObject(eq(bucketName), contains("data.csv"));
}
```

---

## ‚ùå **2. `shouldMoveFileAndDeleteOriginal()`**

### **Error:**

```
org.mockito.exceptions.base.MockitoException:
Only void methods can doNothing()!
```

### **Root Cause:**

You‚Äôre calling:

```java
doNothing().when(s3Client).copyObject(any(CopyObjectRequest.class));
```

But **`AmazonS3.copyObject()` returns a value** (`CopyObjectResult`), not `void`.
Mockito complains because `doNothing()` can only be used on `void` methods.

---

### ‚úÖ **Fix:**

Use `when(...).thenReturn(...)` instead:

```java
when(s3Client.copyObject(any(CopyObjectRequest.class)))
        .thenReturn(mock(CopyObjectResult.class));

doNothing().when(s3Client).deleteObject(any(DeleteObjectRequest.class));
```

‚úÖ This mocks the return value properly for a non-void method.

---

### ‚úÖ **Updated Test**

```java
@Test
void shouldMoveFileAndDeleteOriginal() {
    when(s3Client.copyObject(any(CopyObjectRequest.class)))
            .thenReturn(mock(CopyObjectResult.class));
    doNothing().when(s3Client).deleteObject(any(DeleteObjectRequest.class));
    when(s3Client.doesObjectExist(eq(bucketName), anyString())).thenReturn(true);

    cosStorageService.moveFile("source.txt", "destination.txt");

    verify(s3Client, times(1)).copyObject(any(CopyObjectRequest.class));
    verify(s3Client, times(1)).deleteObject(any(DeleteObjectRequest.class));
}
```

---

## ‚úÖ **Summary of Fixes**

| Test                                | Issue                                 | Fix                                                 |
| ----------------------------------- | ------------------------------------- | --------------------------------------------------- |
| `shouldGetBucketContent()`          | Argument mismatch on `getObject`      | Use `anyString()` or `contains("data.csv")` matcher |
| `shouldMoveFileAndDeleteOriginal()` | `doNothing()` used on non-void method | Replace with `when(...).thenReturn(mockResult)`     |

---

After these two tweaks, all 16 tests should pass ‚úÖ
No more ‚Äúwanted but not invoked‚Äù or ‚ÄúOnly void methods can doNothing()!‚Äù errors.

---

Would you like me to update your **full `CosStorageServiceTest.java`** file with these two corrected tests included so you can copy-paste the final working version?
